@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
} 
@model IEnumerable<Ads.Entities.Concrete.Advert>


<section class="page-search">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <!-- Advance Search -->
        <div class="advance-search">
          <form asp-area="" asp-controller="advert" asp-action="search">
            <div class="form-row">
              <div class="form-group col-md-4">
                <input name="query" type="text" class="form-control my-2 my-lg-0" id="inputtext4" placeholder="Reklamın Adı">
              </div>
              <div class="form-group col-md-3">
                <input name="category" type="text" class="form-control my-2 my-lg-0" id="inputCategory4" placeholder="Reklamın Kategorisi">
              </div>
              <div class="form-group col-md-3">
                <input name="location" type="text" class="form-control my-2 my-lg-0" id="inputLocation4" placeholder="Reklamın Yeri">
              </div>
              <div class="form-group col-md-2">

                <button type="submit" class="btn btn-primary">Arama Yap!</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="section-sm">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <div class="search-result bg-gray">
          <h2>Arama Sonuçları @ViewBag.Query</h2>
          <p>@ViewBag.AdvertCount tane reklam bulundu - @DateTime.Now.ToString("dd MMMM, yyyy")</p>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-3">
        <div class="category-sidebar">
          <div class="widget category-list">
            <h4 class="widget-header">Şehir</h4>
            <ul class="category-list">
              @foreach (var subcategory in ViewBag.Subcategories)
              {
                <li>
                  <a href="@Url.Action("ChangePage", new { page = ViewBag.Page, ViewBag.Query, category = subcategory.Subcategory, location = ViewBag.Country, ViewBag.MinPrice, ViewBag.MaxPrice, condition = ViewBag.Condition })">@subcategory.Subcategory <span>@subcategory.Count</span></a>
                </li>
              }
            </ul>
          </div>
          <div class="widget category-list">
            <h4 class="widget-header">Country</h4>
            <ul class="category-list">
              @foreach (var country in ViewBag.Countries)
              {
                <li><a href="@Url.Action("ChangePage", new { page = ViewBag.Page, ViewBag.Query, ViewBag.Category, location = country.Country, ViewBag.MinPrice, ViewBag.MaxPrice, condition = ViewBag.Condition })">@country.Country <span>@country.Count</span></a></li>
              }
            </ul>
          </div>
          <div class="widget price-range w-100 d-flex flex-column align-items-center">
            <h4 class="widget-header">Fiyat Aralığı</h4>
            <div class="block">
              <div id="priceSlider"></div>
              <div class="d-flex justify-content-between mt-2">
                <span class="value py-2" id="priceRangeDisplay">$@ViewBag.MinPrice - $@ViewBag.MaxPrice</span>
              </div>
              <button class="btn btn-primary mt-2" id="searchButton">Arama Yap!</button>
            </div>
          </div>
          <div class="widget category-list">
            <h4 class="widget-header">Reklamın Durumu</h4>
            <ul class="category-list">

              <li>
                <a href="@Url.Action("ChangePage", new {  page = ViewBag.Page, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, condition = 0 })">Belirtilmedi</a>
              </li>
              <li>
                <a href="@Url.Action("ChangePage", new {  page = ViewBag.Page, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, condition = 1 })">Yeni</a>
              </li>
              <li>
                <a href="@Url.Action("ChangePage", new {  page = ViewBag.Page, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, condition = 2 })">Az Kullanılmış</a>
              </li>
              <li>
                <a href="@Url.Action("ChangePage", new {  page = ViewBag.Page, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, condition = 3 })">Kullanılmış</a>
              </li>

            </ul>
          </div>

          <!-- rest of your HTML code -->


        </div>
      </div>
      <div class="col-md-9">
        <div class="category-search-filter">
          <div class="product-grid-list">
            <div class="row mt-30">

              <!-- product card -->
              @foreach (var advert in Model)
              {
              // Retrieve the price from the model

                <div class="col-sm-12 col-lg-4 col-md-6">

                  <div class="product-item bg-light" data-price="@advert.Price">
                    <div class="card">
                      <div class="thumb-content">
                        <a href="@Url.Action("Detail", new { id = advert.Id })">
                          @if (Uri.IsWellFormedUriString(advert.AdvertImages.First().ImagePath, UriKind.Absolute))
                          {
                            <img class="card-img-top img-fluid" src="@advert.AdvertImages.FirstOrDefault().ImagePath" alt="Card image cap" >
                          }
                          else
                          {
                            <img class="card-img-top img-fluid"
                                 src="@((advert.AdvertImages != null && advert.AdvertImages.Any()) ? Url.Content($"~/uploads/{advert.AdvertImages.First().ImagePath}") : "~/template/images/products/products-1.jpg")"
                                 alt="Card image cap"
                                  />
                          }
                        </a>

                      </div>
                      <div class="card-body">
                        <h4 class="card-title"><a href="@Url.Action("Detail", new { id = advert.Id  })">@advert.Title</a></h4>
                        <ul class="list-inline product-meta">
                          <li class="list-inline-item">
                            <a href="@Url.Action("Detail", new { id = advert.Id  })">
                              <i class="fa fa-folder-open-o"></i>@foreach (var subcategory in advert.SubcategoryAdverts)
                              {
                                <span>@subcategory.Subcategory.Name</span>
                              }
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="#"><i class="fa fa-calendar"></i>@advert.CreatedDate.ToUniversalTime().ToLongDateString()</a>
                          </li>
                        </ul>
                        @if (advert.Description.Length > 26)
                        {
                          <p class="card-text">@advert.Description.Substring(0, 26) ...</p>
                        }
                        else
                        {
                          <p class="card-text">@advert.Description</p>
                        }

                        @{

                          if (advert.AdvertComments != null && advert.AdvertComments.Any())
                          {

                            double averageStarCount = advert.AdvertComments.Any()
                            ? advert.AdvertComments.Average(comment => comment.StarCount)
                            : 0;

                            <div class="product-ratings">

                              <ul class="list-inline">
                                @for (int i = 1; i <= 5; i++)
                                {
                                  if (i < averageStarCount)
                                  {
                                    <li class="list-inline-item selected"><i class="fa fa-star"></i></li>
                                  }
                                  else
                                  {
                                    <li class="list-inline-item"><i class="fa fa-star"></i></li>
                                  }


                                }
                              </ul>
                            </div>
                          }

                          else
                          {
                            <div class="product-ratings">

                              <ul class="list-inline">
                                <li class="list-inline-item"><i class="fa fa-star"></i></li>
                                <li class="list-inline-item"><i class="fa fa-star"></i></li>
                                <li class="list-inline-item"><i class="fa fa-star"></i></li>
                                <li class="list-inline-item"><i class="fa fa-star"></i></li>
                                <li class="list-inline-item"><i class="fa fa-star"></i></li>
                              </ul>
                            </div>

                          }
                        }

                      </div>
                    </div>
                  </div>
                </div>
              }

              <!-- product card son -->
            </div>
          </div>
          <div class="pagination justify-content-center">
            <nav aria-label="Page navigation example">
              <ul class="pagination">
                @{
                  var activePage = Convert.ToInt32(Context.Request.Query["page"]);
                  var prevPage = activePage - 1;
                  if (prevPage <= 0) activePage = 1;
                  var nextPage = activePage + 1;
                  if (nextPage > (int)ViewBag.PageCount) nextPage = (int)ViewBag.PageCount;
                }

                @if (activePage > 1)
                {
                  <li class="list-inline-item">

                    <a class="page-link" href="@Url.Action("ChangePage", new {  page = @prevPage, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, ViewBag.Condition })" aria-label="Previous">
                      <span aria-hidden="true">&laquo;</span>
                      <span class="sr-only">Previous</span>
                    </a>
                  </li>
                }
                @for (int i = 1; i <= ViewBag.PageCount; i++)
                {
                  @if (i == activePage)
                  {
                    <li class="page-item active"><a class=" page-link ">@i</a></li>



                  }
                  else
                  {
                    <li class="page-item"><a class=" page-link " href="@Url.Action("ChangePage", new {  page = i, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, ViewBag.Condition })">@i</a></li>
                  }
                }
                @if (activePage < (int)ViewBag.PageCount)
                {
                  <li class="list-inline-item">
                    <a class="page-link" aria-label="Next" href="@Url.Action("ChangePage", new {  page = @nextPage, ViewBag.Query, ViewBag.Category, ViewBag.Location, ViewBag.MinPrice, ViewBag.MaxPrice, ViewBag.Condition })">

                      <span aria-hidden="true">&raquo;</span>
                      <span class="sr-only">Next</span>
                    </a>
                  </li>
                }
              </ul>
            </nav>
          </div>
        </div>
      </div>
    </div>
</section>

<style>
  .card-img-top {
    width: 100%;
    height: 12vw;
    object-fit: cover;
  }
</style>

@section scripts {

  <script>
    $(document).ready(function () {
      // Initialize the price range slider
      var priceSlider = new Slider("#priceSlider", {
        range: true,
        min: 0,
        max: 5000,
        step: 5,
        value: [@ViewBag.MinPrice, @ViewBag.MaxPrice],
      });

      // Update the price range display on slider change
      priceSlider.on("change", function (sliderValue) {
        $("#priceRangeDisplay").text("$" + sliderValue.newValue[0] + " - $" + sliderValue.newValue[1]);
      });

      // Attach click event to the search button
      $("#searchButton").click(function () {
        var sliderValues = priceSlider.getValue();
        var minPrice = sliderValues[0];
        var maxPrice = sliderValues[1];

        // Redirect to the FilterByPrice action with the selected price range
        window.location.href = "/Advert/ChangePage?minPrice=" + minPrice +
          "&maxPrice=" + maxPrice +
          "&page=" + '@Html.Raw(ViewBag.Page)' +
          "&query=" + '@Html.Raw(ViewBag.Query)' +
          "&category=" + '@Html.Raw(ViewBag.Category)' +
          "&location=" + '@Html.Raw(ViewBag.Location)' +
          "&condition=" + '@Html.Raw(ViewBag.Condition)';

      });
    });
  </script>

  

}
